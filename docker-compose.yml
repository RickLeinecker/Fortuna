version: '3'

services:
  server:
    build:
      context: ./backend_fortuna_v2/
      dockerfile: Dockerfile
    container_name: fortunabackend
    ports:
      - "5000:5000"
    volumes:
      - "./backend_fortuna_v2/nodemodules:/src/node_modules"
      - "./backend_fortuna_v2/src:/app/src"
    networks:
      - fortunalocalnetwork
  client:
    stdin_open: true
    build:
      context: ./frontend_fortuna_v2/
      dockerfile: Dockerfile
    container_name: fortunafrontend
    ports:
        - "3000:3000"
    volumes:
      - "nodemodules:/app/node_modules"
      - "./frontend_fortuna_v2:/app"
    depends_on:
      - server
    networks:
      - fortunalocalnetwork
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - client
    networks:
      - fortunalocalnetwork

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email johnc33594@gmail.com --agree-tos --no-eff-email --staging -d fortunacombattestgoogle.com  -d www.fortunacombattestgoogle.com

volumes:
  nodemodules:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/dhparam/
      o: bind

networks:
  fortunalocalnetwork:
    driver: bridge